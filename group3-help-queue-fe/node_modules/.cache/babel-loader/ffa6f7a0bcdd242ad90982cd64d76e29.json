{"ast":null,"code":"var _jsxFileName = \"/home/dylan/Documents/Group3FinalGroupProjectCNE/group3-help-queue-fe/src/completedTickets.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CardModal from './cardModal';\nimport ReactPaginate from 'react-paginate';\nimport axios from 'axios';\nimport CardStructure from './cardStructure';\nimport './Headings.css';\nimport './Tickets.css';\nimport './Buttons.css';\nimport './Pagnation.css';\nimport './Inputs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CompletedTickets = ({\n  tickets,\n  setTickets,\n  refresh,\n  setRefresh\n}) => {\n  _s();\n\n  const [showTicketModal, setShowTicketModal] = useState(false);\n  const [currentTicketModal, setCurrentTicketModal] = useState([]);\n  const [pageNum, setPageNum] = useState(1); // const CompletedTicketsList = [];\n  // tickets.map((ticket) => {\n  //     if (ticket.complete === true) {\n  //         CompletedTicketsList.push(ticket);\n  //         // console.log('completed tickets: ', completedTicketsList);\n  //     }\n  // })\n  // const numOfTickets = CompletedTicketsList.length;\n  // const ticketsPerPage = 4;\n  // const firstTicketToDisplay = ((pageNum-1) * ticketsPerPage) + 1;\n  // // eg. user clicks page 2 button, we want tickets 5-8 to display.\n  // const displayTickets = CompletedTicketsList.slice((firstTicketToDisplay - 1), (firstTicketToDisplay + (ticketsPerPage - 1)));\n  // const numOfPages = Math.ceil(numOfTickets/ticketsPerPage);\n\n  const numOfTickets = tickets.length;\n  const ticketsPerPage = 4;\n  const firstTicketToDisplay = (pageNum - 1) * ticketsPerPage + 1; // eg. user clicks page 2 button, we want tickets 5-8 to display.\n\n  const displayTickets = tickets.slice(firstTicketToDisplay - 1, firstTicketToDisplay + (ticketsPerPage - 1));\n  const numOfPages = Math.ceil(numOfTickets / ticketsPerPage);\n\n  const openTicketModal = ticketDetails => {\n    setShowTicketModal(prev => !prev);\n    setCurrentTicketModal(ticketDetails);\n  };\n\n  const deleteTicket = id => {\n    axios.delete(`http://localhost:8899/tickets/delete/${id}`).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    setRefresh(true);\n  };\n\n  const changePage = ({\n    selected\n  }) => {\n    setPageNum(selected + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completedHeading\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Completed Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardGrid\",\n      children: [displayTickets.map(cardStuff => /*#__PURE__*/_jsxDEV(CardStructure, {\n        cardStuff: cardStuff,\n        openTicketModal: openTicketModal,\n        deleteTicket: deleteTicket\n      }, cardStuff.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this)), /*#__PURE__*/_jsxDEV(CardModal, {\n        showTicketModal: showTicketModal,\n        setShowTicketModal: setShowTicketModal,\n        currentTicketModal: currentTicketModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageArea\",\n      children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"Previous\",\n        nextLabel: \"Next\",\n        pageCount: numOfPages,\n        onPageChange: changePage,\n        containerClassName: \"pageButtons\",\n        previousLinkClassName: \"previousButton\",\n        nextLinkClassName: \"nextButton\",\n        activeClassName: \"activePage\",\n        disabledClassName: \"disabled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CompletedTickets, \"IaoPZt8a0Rp51uQ0wNM7ZUElk60=\");\n\n_c = CompletedTickets;\nexport default CompletedTickets;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompletedTickets\");","map":{"version":3,"sources":["/home/dylan/Documents/Group3FinalGroupProjectCNE/group3-help-queue-fe/src/completedTickets.jsx"],"names":["React","useState","CardModal","ReactPaginate","axios","CardStructure","CompletedTickets","tickets","setTickets","refresh","setRefresh","showTicketModal","setShowTicketModal","currentTicketModal","setCurrentTicketModal","pageNum","setPageNum","numOfTickets","length","ticketsPerPage","firstTicketToDisplay","displayTickets","slice","numOfPages","Math","ceil","openTicketModal","ticketDetails","prev","deleteTicket","id","delete","then","response","console","log","catch","error","changePage","selected","map","cardStuff"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport CardModal from './cardModal';\nimport ReactPaginate from 'react-paginate';\nimport axios from 'axios';\n\nimport CardStructure from './cardStructure';\nimport './Headings.css';\nimport './Tickets.css';\nimport './Buttons.css';\nimport './Pagnation.css';\nimport './Inputs.css';\n\n\nconst CompletedTickets = ({ tickets, setTickets, refresh, setRefresh }) => {\n\n    const [showTicketModal, setShowTicketModal] = useState(false);\n    const [currentTicketModal, setCurrentTicketModal] = useState([]);\n    const [pageNum, setPageNum] = useState(1);\n\n\n    // const CompletedTicketsList = [];\n    // tickets.map((ticket) => {\n    //     if (ticket.complete === true) {\n    //         CompletedTicketsList.push(ticket);\n    //         // console.log('completed tickets: ', completedTicketsList);\n    //     }\n    // })\n\n    // const numOfTickets = CompletedTicketsList.length;\n    // const ticketsPerPage = 4;\n    // const firstTicketToDisplay = ((pageNum-1) * ticketsPerPage) + 1;\n   \n    // // eg. user clicks page 2 button, we want tickets 5-8 to display.\n    // const displayTickets = CompletedTicketsList.slice((firstTicketToDisplay - 1), (firstTicketToDisplay + (ticketsPerPage - 1)));\n    // const numOfPages = Math.ceil(numOfTickets/ticketsPerPage);\n\n    const numOfTickets = tickets.length;\n    const ticketsPerPage = 4;\n    const firstTicketToDisplay = ((pageNum - 1) * ticketsPerPage) + 1;\n\n    // eg. user clicks page 2 button, we want tickets 5-8 to display.\n    const displayTickets = tickets.slice((firstTicketToDisplay - 1), (firstTicketToDisplay + (ticketsPerPage - 1)));\n    const numOfPages = Math.ceil(numOfTickets / ticketsPerPage);\n\n\n    const openTicketModal = (ticketDetails) => {\n        setShowTicketModal(prev => !prev);\n        setCurrentTicketModal(ticketDetails);\n    }\n\n\n    \n    const deleteTicket = (id) => {\n        axios.delete(`http://localhost:8899/tickets/delete/${id}`)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n            setRefresh(true);\n\n    }\n\n\n    const changePage = ({selected}) => {\n        setPageNum(selected + 1);\n    }\n\n    return (\n        <>\n            <div className=\"completedHeading\">\n                <h2 className=\"header\">Completed Tickets</h2>\n            </div>\n            <div className=\"cardGrid\">\n                {\n                        displayTickets.map((cardStuff) => (\n                            <CardStructure key={cardStuff.id} cardStuff={cardStuff} openTicketModal={openTicketModal} deleteTicket={deleteTicket} />\n                        ))\n\n                }\n                <CardModal showTicketModal={showTicketModal} setShowTicketModal={setShowTicketModal} currentTicketModal={currentTicketModal} />\n            </div>\n            <div className=\"pageArea\">\n                <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                pageCount={numOfPages}\n                onPageChange={changePage}\n                containerClassName={\"pageButtons\"}\n                previousLinkClassName={\"previousButton\"}\n                nextLinkClassName={\"nextButton\"}\n                activeClassName={\"activePage\"}\n                disabledClassName={\"disabled\"}\n                />\n            </div>\n        </>\n    )\n\n}\n\nexport default CompletedTickets;"]},"metadata":{},"sourceType":"module"}